import os
import pandas as pd

configfile: "config/config.yaml"

bowtie2_index = config["bowtie2_index"]
project_name = config["project_name"]
sample_annotation = config['sample_annotation']
min_read_length = config["min_read_length"]

# parse sample annotation
annotation = pd.read_table(sample_annotation)
samples = annotation.iloc[:, 0]
fq1s = annotation.iloc[:, 2]
fq2s = annotation.iloc[:, 3]

fq1dict = dict(zip(samples, fq1s))
fq2dict = dict(zip(samples, fq2s))

rule all:
    input:
        expand("mapped_reads/{sample}.bam", sample=samples)

rule bowtie2_map:
    input:
        f1 = lambda wildcards: fq1dict[wildcards.sample],
        f2 = lambda wildcards: fq2dict[wildcards.sample]
    output:
        "mapped_reads/{sample}.bam"
    log:
        "logs/{sample}_bowtie2.log"
    threads:
        2 
    shell:
        "bowtie2 -p {threads} --no-mixed --no-discordant --sensitive -x {bowtie2_index} -1 {input.f1} -2 {input.f2} 2>{log} | samtools view -Sb - > {output}"
    
