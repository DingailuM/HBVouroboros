from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
import prepare_HBV_refgenomes as ref

localrules: download_refgenomes

HTTP = HTTPRemoteProvider()

rule all:
    input: "HBV_refgenomes_dup_STAR", 
           "HBV_refgenomes_dup_BOWTIE2",
           "HBV_allgenomes.fasta",
           dynamic("HBV_refgenome_{refgenome}.fasta")

rule download_refgenomes:
    input:
         HTTP.remote('https://hbvdb.lyon.inserm.fr/data/references/hbvdbr.fas',
		     keep_local=True)
    output:
        "HBV_refgenomes_raw.fasta" 
    run:
        shell("mv {input} {output}")
    
rule download_allgenomes:
    input:
        HTTP.remote(
            'https://hbvdb.lyon.inserm.fr/data/nucleic/fasta/all_Genomes.fas',
            keep_local=True)
    output:
        "HBV_allgenomes.fasta"
    run:
        shell("mv {input} {output}")

rule simplify_id:
    input:
       fasta="HBV_refgenomes_raw.fasta"
    output:
       fasta="HBV_refgenomes.fasta"
    run:
        ref.simplify_id_FASTA(input.fasta, output.fasta)

rule dup_and_conc:
    input:
        fasta="HBV_refgenomes.fasta"
    output:
        fasta="HBV_refgenomes_dup.fasta"
    log:
        "logs/HBV_refgenomes_dup.log"
    run:
        ref.dup_and_conc_FASTA(input.fasta, output.fasta)

checkpoint split:
    input:
        fasta="HBV_refgenomes_dup.fasta"
    output:
        dynamic('HBV_refgenome_{refgenome}.fasta')
    run:
        ref.split_FASTA(input.fasta, prefix='HBV_refgenome_')
        
rule star_index:
    input:
        fasta = "HBV_refgenomes_dup.fasta"
    output:
        directory("HBV_refgenomes_dup_STAR")
    message:
        "Generating STAR index of duplicated HBV reference genomes"
    threads:
        1
    params:
        extra = ""
    log:
        "logs/star_index_HBV_refgenomes_dup.log"
    wrapper:
        "0.49.0/bio/star/index"

rule bowtie2_index:
    input:
        fasta = "HBV_refgenomes_dup.fasta"
    output:
        directory("HBV_refgenomes_dup_BOWTIE2")
    threads:
        2
    message:
        "Generating bowtie2 index of duplicated HBV reference genomes"
    log:
        "logs/bowtie2_index_HBV_refgenomes_dup.log"
    shell:
        "mkdir {output}; bowtie2-build --threads {threads} {input.fasta} {output}/{output}"
